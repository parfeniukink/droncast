services:
  database:
    image: postgres:16
    container_name: droncast_database
    env_file: ".env"
    ports:
      - "5432:5432"
    volumes:
      - pg-data:/var/lib/postgresql/data
  
  redis:
    image: redis:latest
    container_name: droncast_redis
    ports:
      - "6379:6379"
    restart: on-failure

  adminer:
    image: adminer
    container_name: droncast_adminer
    ports:
      - 8080:8080

  backend: &app
    image: ${BACKEND_IMAGE}
    build:
      args:
        PIPENV_EXTRAS: ${PIPENV_EXTRAS}
    container_name: droncast_app
    env_file: ".env"
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - database
    volumes:
      - ./src:/app/src

  worker:
    <<: *app
    entrypoint: ""
    env_file: ".env"
    container_name: droncast_worker
    command: celery -A src.config worker -l info
    ports: []
    depends_on:
      - redis
      - backend

  celery_beat:
    <<: *app
    container_name: droncast_celery_beat
    command: celery -A src.config beat -l info
    ports: []
    depends_on:
      - redis
      - backend


volumes:
  pg-data: {}
